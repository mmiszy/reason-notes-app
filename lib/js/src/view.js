// Generated by BUCKLESCRIPT VERSION 1.8.0, PLEASE EDIT WITH CARE
'use strict';

var List                    = require("bs-platform/lib/js/list.js");
var Model                   = require("./model.js");
var ElementRe               = require("bs-webapi/lib/js/src/dom/nodes/elementRe.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

function createList() {
  var container = document.createElement("div");
  container.id = "notes-list-container";
  var ul = document.createElement("ul");
  ul.id = "notes-list";
  var button = document.createElement("button");
  button.id = "add-note-button";
  button.innerText = "Dodaj";
  container.appendChild(ul);
  container.appendChild(button);
  return container;
}

function updateList() {
  console.log("lol");
  return /* () */0;
}

function createForm() {
  var form = document.createElement("form");
  form.id = "note-form";
  var textarea = document.createElement("textarea");
  form.appendChild(textarea);
  textarea.addEventListener("input", (function () {
          var match = ElementRe.asHtmlElement(textarea);
          var $js;
          if (match) {
            $js = match[0];
          } else {
            throw [
                  Caml_builtin_exceptions.invalid_argument,
                  "lol"
                ];
          }
          var text = $js.value;
          var match$1 = form.getAttribute("data-note-id");
          if (match$1 !== null) {
            Model.updateNote(/* record */[
                  /* text */text,
                  /* id */match$1
                ]);
          } else {
            throw [
                  Caml_builtin_exceptions.invalid_argument,
                  "data-note-id missing"
                ];
          }
          return /* () */0;
        }));
  return form;
}

function init(mainSelector) {
  var match = document.querySelector(mainSelector);
  var mainEl;
  if (match !== null) {
    mainEl = match;
  } else {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "document.querySelector " + mainSelector
        ];
  }
  var listEl = createList(/* () */0);
  var formEl = createForm(/* () */0);
  var match$1 = formEl.querySelector("textarea");
  var textareaEl;
  if (match$1 !== null) {
    textareaEl = match$1;
  } else {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "Something went wrong"
        ];
  }
  mainEl.appendChild(listEl);
  mainEl.appendChild(formEl);
  var note = List.nth(Model.getNotes(/* () */0), 0);
  formEl.setAttribute("data-note-id", note[/* id */1]);
  textareaEl.textContent = note[/* text */0];
  return /* () */0;
}

exports.createList = createList;
exports.updateList = updateList;
exports.createForm = createForm;
exports.init       = init;
/* Model Not a pure module */
